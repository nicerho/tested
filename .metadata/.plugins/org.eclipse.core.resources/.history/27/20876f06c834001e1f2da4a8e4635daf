package com.in28minutes.rest.webservices.basic;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.web.cors.reactive.CorsUtils;


@Configuration
public class BasicAuthenticationSecurityConfiguration {
    // Filter chain
    // authenticate all requests
    // basic authentication
    // disabling csrf
    // => stateless restApi

//    protected SecurityFilterChain config(HttpSecurity http) throws Exception {
//        http.csrf().disable();
//        http.headers().frameOptions().disable();
//        http.authorizeHttpRequests(authorize -> authorize
//                .requestMatchers(WHITE_LIST).permitAll());
//        return http.build();
    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
                return http
                        .authorizeHttpRequests(
                                // all http requests should be Authenticated
                                auth -> auth.antMatchers(HttpMethod.OPTIONS,"/**").permitAll()
                                        .anyRequest().authenticated()
                                )
                        .httpBasic(Customizer.withDefaults())
                        .sessionManagement(
                                session -> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS)
                        ).csrf().disable()
                        .build();
            }
}
